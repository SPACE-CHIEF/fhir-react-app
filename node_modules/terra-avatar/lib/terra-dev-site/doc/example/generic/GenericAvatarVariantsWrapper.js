"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function GenericAvatarVariantsWrapper(WrappedComponent) {
  return /*#__PURE__*/function (_React$Component) {
    _inherits(GenericVariants, _React$Component);

    var _super = _createSuper(GenericVariants);

    function GenericVariants(props) {
      var _this;

      _classCallCheck(this, GenericVariants);

      _this = _super.call(this, props);
      _this.handleOnSelect = _this.handleOnSelect.bind(_assertThisInitialized(_this));
      _this.state = {
        colorVariant: 'auto',
        size: undefined,
        variant: 'single-user'
      };
      return _this;
    }

    _createClass(GenericVariants, [{
      key: "handleOnSelect",
      value: function handleOnSelect(event) {
        this.setState(_defineProperty({}, event.target.name, event.target.value));
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(WrappedComponent, _extends({
          color: this.state.colorVariant,
          variant: this.state.variant,
          size: this.state.size
        }, this.props)), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement("label", {
          htmlFor: "variant"
        }, "Select a generic variant type:")), /*#__PURE__*/_react.default.createElement("select", {
          id: "variant",
          name: "variant",
          value: this.state.variant,
          onChange: this.handleOnSelect
        }, /*#__PURE__*/_react.default.createElement("option", {
          value: "single-user"
        }, "Single-User"), /*#__PURE__*/_react.default.createElement("option", {
          value: "shared-user"
        }, "Shared-User"), /*#__PURE__*/_react.default.createElement("option", {
          value: "provider"
        }, "Provider")), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement("label", {
          htmlFor: "colorVariant"
        }, "Select a color variant:")), /*#__PURE__*/_react.default.createElement("select", {
          id: "colorVariant",
          name: "colorVariant",
          value: this.state.colorVariant,
          onChange: this.handleOnSelect
        }, /*#__PURE__*/_react.default.createElement("option", {
          value: "auto"
        }, "Auto"), /*#__PURE__*/_react.default.createElement("option", {
          value: "neutral"
        }, "Neutral"), /*#__PURE__*/_react.default.createElement("option", {
          value: "one"
        }, "One"), /*#__PURE__*/_react.default.createElement("option", {
          value: "two"
        }, "Two"), /*#__PURE__*/_react.default.createElement("option", {
          value: "three"
        }, "Three"), /*#__PURE__*/_react.default.createElement("option", {
          value: "four"
        }, "Four"), /*#__PURE__*/_react.default.createElement("option", {
          value: "five"
        }, "Five"), /*#__PURE__*/_react.default.createElement("option", {
          value: "six"
        }, "Six"), /*#__PURE__*/_react.default.createElement("option", {
          value: "seven"
        }, "Seven"), /*#__PURE__*/_react.default.createElement("option", {
          value: "eight"
        }, "Eight"), /*#__PURE__*/_react.default.createElement("option", {
          value: "nine"
        }, "Nine"), /*#__PURE__*/_react.default.createElement("option", {
          value: "ten"
        }, "Ten")), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement("label", {
          htmlFor: "size"
        }, "Select a size:")), /*#__PURE__*/_react.default.createElement("select", {
          id: "size",
          name: "size",
          value: this.state.size,
          onChange: this.handleOnSelect
        }, /*#__PURE__*/_react.default.createElement("option", {
          value: "1em"
        }, "Default"), /*#__PURE__*/_react.default.createElement("option", {
          value: "2em"
        }, "2em"), /*#__PURE__*/_react.default.createElement("option", {
          value: "3em"
        }, "3em")));
      }
    }]);

    return GenericVariants;
  }(_react.default.Component);
}

var _default = GenericAvatarVariantsWrapper;
exports.default = _default;