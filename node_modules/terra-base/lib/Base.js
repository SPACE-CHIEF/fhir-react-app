"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _terraI18n = require("terra-i18n");

require("./baseStyles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var propTypes = {
  /**
   * The component(s) that will be wrapped by `<Base />`.
   */
  children: _propTypes.default.node.isRequired,

  /**
   * The locale name.
   */
  locale: _propTypes.default.string.isRequired,

  /**
   * Customized translations provided by consuming application only for current locale.
   */

  /* eslint-disable consistent-return */
  customMessages: function customMessages(props, propName, componentName) {
    if (Object.keys(props[propName]).length !== 0 && props.locale === undefined) {
      return new Error("Missing locale prop for ".concat(propName, " in ").concat(componentName, " props"));
    }
  },

  /**
   * Activates [React Strict Mode](https://reactjs.org/docs/strict-mode.html) for descendants
   */
  strictMode: _propTypes.default.bool,

  /**
   * Whether or not the error should be logged and thrown if something goes wrong. When false, the error will only be logged to the
   * console an error.
   */
  throwOnI18nLoadError: _propTypes.default.bool,

  /**
   * The component(s) that will be wrapped by `<Base />` ONLY in the event that translations have not been loaded yet.
   * NOTE: Absolutely no locale-dependent logic should be utilized in this placeholder.
   */
  translationsLoadingPlaceholder: _propTypes.default.node
};
var defaultProps = {
  customMessages: {},
  strictMode: false,
  throwOnI18nLoadError: false
};

var Base = /*#__PURE__*/function (_React$Component) {
  _inherits(Base, _React$Component);

  var _super = _createSuper(Base);

  function Base(props) {
    var _this;

    _classCallCheck(this, Base);

    _this = _super.call(this, props);
    _this.state = {
      areTranslationsLoaded: false,
      locale: props.locale,
      messages: {}
    };
    return _this;
  }

  _createClass(Base, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.locale !== undefined) {
        try {
          (0, _terraI18n.i18nLoader)(this.props.locale, this.setState, this);
        } catch (e) {
          // eslint-disable-next-line no-console
          console.error(e);

          if (this.props.throwOnI18nLoadError) {
            throw e;
          }
        }
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.locale !== undefined && this.props.locale !== prevProps.locale) {
        try {
          (0, _terraI18n.i18nLoader)(this.props.locale, this.setState, this);
        } catch (e) {
          // eslint-disable-next-line no-console
          console.error(e);

          if (this.props.throwOnI18nLoadError) {
            throw e;
          }
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          customMessages = _this$props.customMessages,
          strictMode = _this$props.strictMode,
          translationsLoadingPlaceholder = _this$props.translationsLoadingPlaceholder;

      var messages = _objectSpread(_objectSpread({}, this.state.messages), customMessages);

      var renderChildren = strictMode ? /*#__PURE__*/_react.default.createElement(_react.default.StrictMode, null, children) : children;
      if (!this.state.areTranslationsLoaded) return /*#__PURE__*/_react.default.createElement("div", null, translationsLoadingPlaceholder);
      return /*#__PURE__*/_react.default.createElement(_terraI18n.I18nProvider, {
        locale: this.state.locale,
        messages: messages
      }, renderChildren);
    }
  }]);

  return Base;
}(_react.default.Component);

Base.propTypes = propTypes;
Base.defaultProps = defaultProps;
var _default = Base;
exports.default = _default;